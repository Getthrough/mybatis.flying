<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.2.xsd  
       	http://www.springframework.org/schema/aop
       	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       	http://www.springframework.org/schema/tx
       	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:component-scan base-package="indi.mybatis.flying.*" />
	<!-- <bean id="dataSource1" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="org.h2.Driver" /> <property name="url" 
		value="jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE" 
		/> <property name="username" value="sa"></property> <property name="password" 
		value=""></property> </bean> -->
	<bean id="dataSource1" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="multi" />
		<property name="xaDataSourceClassName"
			value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="user">tester</prop>
				<prop key="password">renzhigang</prop>
				<prop key="URL">jdbc:mysql://115.28.134.232:3306/multi?autoReconnect=true&amp;characterEncoding=UTF8&amp;failOverReadOnly=false&amp;autoReconnectForPools=true
				</prop>
			</props>
		</property>
		<property name="minPoolSize" value="1" />
		<property name="maxPoolSize" value="3" />
		<property name="maxIdleTime" value="60" />

		<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver"></property> 
			<property name="url" value="jdbc:mysql://115.28.134.232:3306/multi?autoReconnect=true&amp;characterEncoding=UTF8&amp;failOverReadOnly=false&amp;autoReconnectForPools=true"></property> 
			<property name="username" value="tester"></property> <property name="password" 
			value="renzhigang"></property> -->
	</bean>
	<bean id="dataSource2" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="volatile" />
		<property name="xaDataSourceClassName"
			value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="user">restma</prop>
				<prop key="password">Aptx4869</prop>
				<prop key="URL">jdbc:mysql://115.28.134.232:3306/volatile?autoReconnect=true&amp;characterEncoding=UTF8&amp;failOverReadOnly=false&amp;autoReconnectForPools=true
				</prop>
			</props>
		</property>
		<property name="minPoolSize" value="1" />
		<property name="maxPoolSize" value="3" />
		<property name="maxIdleTime" value="60" />

		<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver"></property> 
			<property name="url" value="jdbc:mysql://115.28.134.232:3306/volatile?autoReconnect=true&amp;characterEncoding=UTF8&amp;failOverReadOnly=false&amp;autoReconnectForPools=true"></property> 
			<property name="username" value="restma"></property> <property name="password" 
			value="Aptx4869"></property> -->
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:Configuration.xml" />
		<property name="dataSource" ref="dataSource1" />
		<property name="mapperLocations" value="classpath:indi/mybatis/flying/mapper/*.xml" />
		<property name="typeAliasesPackage" value="indi.mybatis.flying" />
	</bean>
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:Configuration.xml" />
		<property name="dataSource" ref="dataSource2" />
		<property name="mapperLocations" value="classpath:indi/mybatis/flying/mapper2/*.xml" />
		<property name="typeAliasesPackage" value="indi.mybatis.flying" />
	</bean>
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="indi.mybatis.flying.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<bean id="mapperScannerConfigurer2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="indi.mybatis.flying.mapper2" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2" />
	</bean>

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>
	<bean id="springTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
		<property name="allowCustomIsolationLevels" value="true" />
	</bean>
	<tx:annotation-driven transaction-manager="springTransactionManager" />

	<!-- <aop:aspectj-autoproxy /> <aop:config proxy-target-class="true"> <aop:advisor 
		pointcut="execution(* *com.lantii.service..*(..))" advice-ref="txAdvice" 
		/> </aop:config> <tx:advice id="txAdvice" transaction-manager="springTransactionManager"> 
		<tx:attributes> <tx:method name="get*" propagation="REQUIRED" read-only="true" 
		/> <tx:method name="find*" propagation="REQUIRED" read-only="true" /> <tx:method 
		name="has*" propagation="REQUIRED" read-only="true" /> <tx:method name="locate*" 
		propagation="REQUIRED" read-only="true" /> <tx:method name="*" propagation="REQUIRED" 
		rollback-for="Exception" /> </tx:attributes> </tx:advice> -->

	<!-- <bean id="txManager1" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource1"></property> </bean> <bean id="txManager2" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource2"></property> </bean> <tx:annotation-driven 
		transaction-manager="txManager2" /> <tx:annotation-driven transaction-manager="txManager1" 
		/> -->
</beans>